{"version":3,"sources":["webpack://webpack-env/./src/templates/templates.js","webpack://webpack-env/./src/js/ymaps.js","webpack://webpack-env/./src/index.js"],"names":["formTemplate","let","clusterer","mapInit","ymaps","ready","myMap","Map","center","zoom","controls","balloonMaxWidth","balloonMaxHeight","searchControlProvider","events","add","e","coords","get","openBalloon","Clusterer","clusterDisableClickZoom","options","set","renderGeoObjects","geoObjectsInCluster","getGeoObjects","now","Date","toLocaleDateString","getReviewsFromLS","reviews","localStorage","JSON","parse","getReviewList","currentGeoObjects","reviewListHTML","review","some","geoObject","stringify","geometry","_coordinates","author","place","reviewText","map","geoObjects","placemark","Placemark","stopPropagation","push","removeAll","remove","async","balloon","open","content","document","querySelector","addEventListener","reviewInput","getElementsByClassName","reviewTextarea","preventDefault","this","elements","value","i","length","style","border","close"],"mappings":"4BAAO,MAAMA;;;;;;;SCCbC,IAAIC,EAEJ,SAASC,IACLC,MAAMC,MAAM,KACR,MAAMC,EAAQ,IAAIF,MAAMG,IAAI,MAAO,CAC/BC,OAAQ,CAAC,MAAO,OAChBC,KAAM,KACNC,SAAU,CAAC,gBACZ,CACCC,gBAAiB,IACjBC,iBAAkB,IAClBC,sBAAuB,kBAE3BP,EAAMQ,OAAOC,IAAI,QAAS,SAAUC,GAChC,MAAMC,EAASD,EAAEE,IAAI,UACrBC,EAAYb,EAAOW,EAAQ,MAG/Bf,EAAY,IAAIE,MAAMgB,UAAU,CAAEC,wBAAyB,OAC3DnB,EAAUoB,QAAQC,IAAI,aAAc,OACpCC,EAAiBlB,GAEjBJ,EAAUY,OAAOC,IAAI,QAAS,SAAUC,GACpCf,IAAIwB,EAAsBT,EAAEE,IAAI,UAAUQ,gBAC1CP,EAAYb,EAAOU,EAAEE,IAAI,UAAWO,KAGxCxB,IAAI0B,GAAM,IAAIC,MAAOC,qBAErB,SAASC,IACL,MAAMC,EAAUC,aAAaD,QAC7B,OAAOE,KAAKC,MAAMH,GAAW,MAGjC,SAASI,EAAcC,GACnBnC,IAAIoC,EAAiB,GAErB,IAAK,MAAMC,KAAUR,IAAoB,CACrC,GAAIM,EAAkBG,KAAKC,GAAaP,KAAKQ,UAAUD,EAAUE,SAASC,gBAAkBV,KAAKQ,UAAUH,EAAOrB,SAAU,CACxHoB;;;wDAGoCC,EAAOM;yDACNN,EAAOO;wDACRlB;;oDAEJW,EAAOQ;6BAK/C,OAAOT,EAGX,SAASb,EAAiBuB,GACtB,MAAMC,EAAa,GAEnB,IAAK,MAAMV,KAAUR,IAAoB,CACrC,MAAMmB,EAAY,IAAI7C,MAAM8C,UAAUZ,EAAOrB,QAC7CgC,EAAUnC,OAAOC,IAAI,QAASC,IAC1BA,EAAEmC,kBACFhC,EAAY4B,EAAK/B,EAAEE,IAAI,UAAW,CAACF,EAAEE,IAAI,cAE7C8B,EAAWI,KAAKH,GAGpB/C,EAAUmD,YACVN,EAAIC,WAAWM,OAAOpD,GACtBA,EAAUa,IAAIiC,GACdD,EAAIC,WAAWjC,IAAIb,GAGvBqD,eAAepC,EAAY4B,EAAK9B,EAAQmB,SAC9BW,EAAIS,QAAQC,KAAKxC,EAAQ,CAC3ByC,gCAAiCvB,EAAcC,WAA6BpC,IAGhF2D,SAASC,cAAc,aAAaC,iBAAiB,SAAU,SAAU7C,GACrEf,IAAI6D,EAAcH,SAASI,uBAAuB,iBAClD9D,IAAI+D,EAAiBL,SAASC,cAAc,qBAC5C5C,EAAEiD,iBACF,MAAM3B,EAAS,CACXrB,SACA2B,OAAQsB,KAAKC,SAASvB,OAAOwB,MAC7BvB,MAAOqB,KAAKC,SAAStB,MAAMuB,MAC3BtB,WAAYoB,KAAKC,SAAS7B,OAAO8B,OAGrC,IAAKF,KAAKC,SAASvB,OAAOwB,QAAUF,KAAKC,SAAStB,MAAMuB,QAAUF,KAAKC,SAAS7B,OAAO8B,MAAO,CAC1F,IAAKnE,IAAIoE,EAAI,EAAGA,EAAIP,EAAYQ,OAAQD,IAAK,CACzCP,EAAYO,GAAGE,MAAMC,OAAS,gBAElCR,EAAeO,MAAMC,OAAS,gBAC9B,OAGJxC,aAAaD,QAAUE,KAAKQ,UAAU,IAAIX,IAAoBQ,IAE9Dd,EAAiBuB,GACjBA,EAAIS,QAAQiB,aCjG5BtE,K","file":"index.3bb06c65fa505f55fa9f.js","sourcesContent":["export const formTemplate = `\r\n<form id=\"add-form\">\r\n  <h3 class=\"review__title\">Отзыв:</h3>\r\n  <input type=\"text\"  class=\"review__input\" placeholder=\"Укажите ваше имя\" name=\"author\">\r\n  <input type=\"text\"  class=\"review__input\" placeholder=\"Укажите место\" name=\"place\">\r\n  <textarea class=\"review__textarea\"  placeholder=\"Оставить отзыв\" name=\"review\"></textarea>\r\n  <button id=\"review__button\">Добавить</button>\r\n</form>`","import { formTemplate } from \"../templates/templates\"\nlet clusterer\n\nfunction mapInit() {\n    ymaps.ready(() => {\n        const myMap = new ymaps.Map('map', {\n            center: [55.75, 37.62],\n            zoom: 13.5,\n            controls: ['zoomControl']\n        }, {\n            balloonMaxWidth: 353,\n            balloonMaxHeight: 501,\n            searchControlProvider: 'yandex#search'\n        })\n        myMap.events.add('click', function (e) {\n            const coords = e.get('coords')\n            openBalloon(myMap, coords, [])\n        })\n\n        clusterer = new ymaps.Clusterer({ clusterDisableClickZoom: true })\n        clusterer.options.set('hasBalloon', false)\n        renderGeoObjects(myMap)\n\n        clusterer.events.add('click', function (e) {\n            let geoObjectsInCluster = e.get('target').getGeoObjects()\n            openBalloon(myMap, e.get('coords'), geoObjectsInCluster)\n        })\n\n        let now = new Date().toLocaleDateString();\n\n        function getReviewsFromLS() {\n            const reviews = localStorage.reviews\n            return JSON.parse(reviews || '[]')\n        }\n\n        function getReviewList(currentGeoObjects) {\n            let reviewListHTML = ''\n\n            for (const review of getReviewsFromLS()) {\n                if (currentGeoObjects.some(geoObject => JSON.stringify(geoObject.geometry._coordinates) === JSON.stringify(review.coords))) {\n                    reviewListHTML += `\n                    <div class=\"review\">\n                        <div class=\"review__content\">\n                            <div class=\"review__info\">${review.author}</div>\n                            <div class=\"review__place\">${review.place}</div>\n                            <div class=\"review__time\">${now}</div>\n                        </div>\n                        <div class=\"review__text\">${review.reviewText}</div>\n                    </div>`\n                }\n            }\n\n            return reviewListHTML\n        }\n\n        function renderGeoObjects(map) {\n            const geoObjects = []\n\n            for (const review of getReviewsFromLS()) {\n                const placemark = new ymaps.Placemark(review.coords)\n                placemark.events.add('click', e => {\n                    e.stopPropagation()\n                    openBalloon(map, e.get('coords'), [e.get('target')])\n                })\n                geoObjects.push(placemark)\n            }\n\n            clusterer.removeAll()\n            map.geoObjects.remove(clusterer)\n            clusterer.add(geoObjects)\n            map.geoObjects.add(clusterer)\n        }\n\n        async function openBalloon(map, coords, currentGeoObjects) {\n            await map.balloon.open(coords, {\n                content: `<div class=\"reviews\">${getReviewList(currentGeoObjects)}</div>` + formTemplate\n            })\n\n            document.querySelector('#add-form').addEventListener('submit', function (e) {\n                let reviewInput = document.getElementsByClassName('review__input')\n                let reviewTextarea = document.querySelector('.review__textarea')\n                e.preventDefault()\n                const review = {\n                    coords,\n                    author: this.elements.author.value,\n                    place: this.elements.place.value,\n                    reviewText: this.elements.review.value\n                }\n\n                if (!this.elements.author.value || !this.elements.place.value || !this.elements.review.value) {\n                    for (let i = 0; i < reviewInput.length; i++) {\n                        reviewInput[i].style.border = '1px solid red'\n                    }\n                    reviewTextarea.style.border = '1px solid red'\n                    return\n                }\n\n                localStorage.reviews = JSON.stringify([...getReviewsFromLS(), review])\n\n                renderGeoObjects(map)\n                map.balloon.close()\n            })\n        }\n    })\n}\n\nexport {\n    mapInit\n}","import { mapInit } from \"./js/ymaps\";\nimport './styles/main.css';\n\nmapInit()"],"sourceRoot":""}